plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs"
    id "io.gitlab.arturbosch.detekt" version "1.19.0"
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "lamarao.jose.newsapp"
        minSdkVersion 30
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_KEY", '"4ffe516959e444e9b30e82262d37adb4"'
            buildConfigField "String", "BASE_URL", '"https://newsapi.org/"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_KEY", '"4ffe516959e444e9b30e82262d37adb4"'
            buildConfigField "String", "BASE_URL", '"https://newsapi.org/"'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    flavorDimensions 'news_source'
    productFlavors {
        bbc_news {
            dimension 'news_source'
            buildConfigField "String", "sources", '"bbc-news"'
        }
        cnn {
            dimension 'news_source'
            buildConfigField "String", "sources", '"cnn"'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    //Android X
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.5.0'

    //testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0')
    debugImplementation("androidx.fragment:fragment-testing:1.4.1")
    androidTestImplementation("androidx.navigation:navigation-testing:2.4.1")
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.1")
    testImplementation 'io.kotest:kotest-assertions-core:5.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    //room
    implementation 'androidx.room:room-runtime:2.4.2'
    kapt 'androidx.room:room-compiler:2.4.2'

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"

    // Serializer
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")

    //kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Biometrics
    implementation 'androidx.biometric:biometric:1.2.0-alpha04'

    //Hilt
    implementation "com.google.dagger:hilt-android:2.40.4"
    kapt "com.google.dagger:hilt-compiler:2.40.4"
}

check.dependsOn("detekt")

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = false // activate all available (even unstable) rules.
    config = files("$projectDir/config/detekt.yml")
    // point to your custom config defining rules to run, overwriting default behavior
}
